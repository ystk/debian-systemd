'\" t
.TH "SYSTEMD\&.TIMER" "5" "" "systemd 208" "systemd.timer"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
systemd.timer \- Timer unit configuration
.SH "SYNOPSIS"
.PP
\fItimer\fR\&.timer
.SH "DESCRIPTION"
.PP
A unit configuration file whose name ends in
"\&.timer"
encodes information about a timer controlled and supervised by systemd, for timer\-based activation\&.
.PP
This man page lists the configuration options specific to this unit type\&. See
\fBsystemd.unit\fR(5)
for the common options of all unit configuration files\&. The common configuration items are configured in the generic [Unit] and [Install] sections\&. The timer specific configuration options are configured in the [Timer] section\&.
.PP
For each timer file, a matching unit file must exist, describing the unit to activate when the timer elapses\&. By default, a service by the same name as the timer (except for the suffix) is activated\&. Example: a timer file
foo\&.timer
activates a matching service
foo\&.service\&. The unit to activate may be controlled by
\fIUnit=\fR
(see below)\&.
.PP
Unless
\fIDefaultDependencies=\fR
is set to
\fBfalse\fR, timer units will implicitly have dependencies of type
\fIConflicts=\fR
and
\fIBefore=\fR
on
shutdown\&.target\&. These ensure that timer units are stopped cleanly prior to system shutdown\&. Only timer units involved with early boot or late system shutdown should disable this option\&.
.SH "OPTIONS"
.PP
Timer files must include a [Timer] section, which carries information about the timer it defines\&. The options specific to the [Timer] section of timer units are the following:
.PP
\fIOnActiveSec=\fR, \fIOnBootSec=\fR, \fIOnStartupSec=\fR, \fIOnUnitActiveSec=\fR, \fIOnUnitInactiveSec=\fR
.RS 4
Defines monotonic timers relative to different starting points:
\fIOnActiveSec=\fR
defines a timer relative to the moment the timer itself is activated\&.
\fIOnBootSec=\fR
defines a timer relative to when the machine was booted up\&.
\fIOnStartupSec=\fR
defines a timer relative to when systemd was first started\&.
\fIOnUnitActiveSec=\fR
defines a timer relative to when the unit the timer is activating was last activated\&.
\fIOnUnitInactiveSec=\fR
defines a timer relative to when the unit the timer is activating was last deactivated\&.
.sp
Multiple directives may be combined of the same and of different types\&. For example, by combining
\fIOnBootSec=\fR
and
\fIOnUnitActiveSec=\fR, it is possible to define a timer that elapses in regular intervals and activates a specific service each time\&.
.sp
The arguments to the directives are time spans configured in seconds\&. Example: "OnBootSec=50" means 50s after boot\-up\&. The argument may also include time units\&. Example: "OnBootSec=5h 30min" means 5 hours and 30 minutes after boot\-up\&. For details about the syntax of time spans see
\fBsystemd.unit\fR(5)\&.
.sp
If a timer configured with
\fIOnBootSec=\fR
or
\fIOnStartupSec=\fR
is already in the past when the timer unit is activated, it will immediately elapse and the configured unit is started\&. This is not the case for timers defined in the other directives\&.
.sp
These are monotonic timers, independent of wall\-clock time and timezones\&. If the computer is temporarily suspended, the monotonic clock stops too\&.
.sp
If the empty string is assigned to any of these options, the list of timers is reset, and all prior assignments will have no effect\&.
.RE
.PP
\fIOnCalendar=\fR
.RS 4
Defines realtime (i\&.e\&. wallclock) timers via calendar event expressions\&. See
\fBsystemd.time\fR(7)
for more information on the syntax of calendar event expressions\&. Otherwise the semantics are similar to
\fIOnActiveSec=\fR
and related settings\&.
.RE
.PP
\fIUnit=\fR
.RS 4
The unit to activate when this timer elapses\&. The argument is a unit name, whose suffix is not
"\&.timer"\&. If not specified, this value defaults to a service that has the same name as the timer unit, except for the suffix\&. (See above\&.) It is recommended that the unit name that is activated and the unit name of the timer unit are named identically, except for the suffix\&.
.RE
.SH "SEE ALSO"
.PP
\fBsystemd\fR(1),
\fBsystemctl\fR(8),
\fBsystemd.unit\fR(5),
\fBsystemd.service\fR(5),
\fBsystemd.time\fR(7),
\fBsystemd.directives\fR(7)
