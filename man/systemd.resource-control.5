'\" t
.TH "SYSTEMD\&.RESOURCE\-CONTROL" "5" "" "systemd 208" "systemd.resource-control"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
systemd.resource-control \- Resource control unit settings
.SH "SYNOPSIS"
.PP
\fIslice\fR\&.slice,
\fIscope\fR\&.scope,
\fIservice\fR\&.service,
\fIsocket\fR\&.socket,
\fImount\fR\&.mount,
\fIswap\fR\&.swap
.SH "DESCRIPTION"
.PP
Unit configuration files for services, slices, scopes, sockets, mount points, and swap devices share a subset of configuration options for resource control of spawned processes\&. Internally, this relies on the the Control Groups kernel concept for organizing processes in a hierarchial tree of named groups for the purpose of resource management\&.
.PP
This man page lists the configuration options shared by those six unit types\&. See
\fBsystemd.unit\fR(5)
for the common options of all unit configuration files, and
\fBsystemd.slice\fR(5),
\fBsystemd.scope\fR(5),
\fBsystemd.service\fR(5),
\fBsystemd.socket\fR(5),
\fBsystemd.mount\fR(5), and
\fBsystemd.swap\fR(5)
for more information on the specific unit configuration files\&. The resource control configuration options are configured in the [Slice], [Scope], [Service], [Socket], [Mount], or [Swap] sections, depending on the unit type\&.
.PP
See the
\m[blue]\fBNew Control Group Interfaces\fR\m[]\&\s-2\u[1]\d\s+2
for an introduction how to make use of resource control APIs from programs\&.
.SH "OPTIONS"
.PP
Units of the types listed above can have settings for resource control configuration:
.PP
\fICPUAccounting=\fR
.RS 4
Turn on CPU usage accounting for this unit\&. Takes a boolean argument\&. Note that turning on CPU accounting for one unit might also implicitly turn it on for all units contained in the same slice and for all its parent slices and the units contained therein\&.
.RE
.PP
\fICPUShares=\fR\fI\fIweight\fR\fR
.RS 4
Assign the specified overall CPU time share weight to the processes executed\&. Takes an integer value\&. This controls the
"cpu\&.shares"
control group attribute, which defaults to 1024\&. For details about this control group attribute, see
\m[blue]\fBsched\-design\-CFS\&.txt\fR\m[]\&\s-2\u[2]\d\s+2\&.
.sp
Implies
"CPUAccounting=true"\&.
.RE
.PP
\fIMemoryAccounting=\fR
.RS 4
Turn on process and kernel memory accounting for this unit\&. Takes a boolean argument\&. Note that turning on memory accounting for one unit might also implicitly turn it on for all units contained in the same slice and for all its parent slices and the units contained therein\&.
.RE
.PP
\fIMemoryLimit=\fR\fI\fIbytes\fR\fR
.RS 4
Specify the limit on maximum memory usage of the executed processes\&. The limit specifies how much process and kernel memory can be used by tasks in this unit\&. Takes a memory size in bytes\&. If the value is suffixed with K, M, G or T, the specified memory size is parsed as Kilobytes, Megabytes, Gigabytes, or Terabytes (with the base 1024), respectively\&. This controls the
"memory\&.limit_in_bytes"
control group attribute\&. For details about this control group attribute, see
\m[blue]\fBmemory\&.txt\fR\m[]\&\s-2\u[3]\d\s+2\&.
.sp
Implies
"MemoryAccounting=true"\&.
.RE
.PP
\fIBlockIOAccounting=\fR
.RS 4
Turn on Block IO accounting for this unit\&. Takes a boolean argument\&. Note that turning on block IO accounting for one unit might also implicitly turn it on for all units contained in the same slice and all for its parent slices and the units contained therein\&.
.RE
.PP
\fIBlockIOWeight=\fR\fI\fIweight\fR\fR
.RS 4
Set the default overall block IO weight for the executed processes\&. Takes a single weight value (between 10 and 1000) to set the default block IO weight\&. This controls the
"blkio\&.weight"
control group attribute, which defaults to 1000\&. For details about this control group attribute, see
\m[blue]\fBblkio\-controller\&.txt\fR\m[]\&\s-2\u[4]\d\s+2\&.
.sp
Implies
"BlockIOAccounting=true"\&.
.RE
.PP
\fIBlockIODeviceWeight=\fR\fI\fIdevice\fR\fR\fI \fR\fI\fIweight\fR\fR
.RS 4
Set the per\-device overall block IO weight for the executed processes\&. Takes a space\-separated pair of a file path and a weight value to specify the device specific weight value, between 10 and 1000\&. (Example: "/dev/sda 500")\&. The file path may be specified as path to a block device node or as any other file in which case the backing block device of the file system of the file is determined\&. This controls the
"blkio\&.weight_device"
control group attribute, which defaults to 1000\&. Use this option multiple times to set weights for multiple devices\&. For details about this control group attribute, see
\m[blue]\fBblkio\-controller\&.txt\fR\m[]\&\s-2\u[4]\d\s+2\&.
.sp
Implies
"BlockIOAccounting=true"\&.
.RE
.PP
\fIBlockIOReadBandwidth=\fR\fI\fIdevice\fR\fR\fI \fR\fI\fIbytes\fR\fR, \fIBlockIOWriteBandwidth=\fR\fI\fIdevice\fR\fR\fI \fR\fI\fIbytes\fR\fR
.RS 4
Set the per\-device overall block IO bandwidth limit for the executed processes\&. Takes a space\-separated pair of a file path and a bandwidth value (in bytes per second) to specify the device specific bandwidth\&. The file path may be a path to a block device node, or as any other file in which case the backing block device of the file system of the file is used\&. If the bandwidth is suffixed with K, M, G, or T, the specified bandwidth is parsed as Kilobytes, Megabytes, Gigabytes, or Terabytes, respectively (Example: "/dev/disk/by\-path/pci\-0000:00:1f\&.2\-scsi\-0:0:0:0 5M")\&. This controls the
"blkio\&.read_bps_device"
and
"blkio\&.write_bps_device"
control group attributes\&. Use this option multiple times to set bandwidth limits for multiple devices\&. For details about these control group attributes, see
\m[blue]\fBblkio\-controller\&.txt\fR\m[]\&\s-2\u[4]\d\s+2\&.
.sp
Implies
"BlockIOAccounting=true"\&.
.RE
.PP
\fIDeviceAllow=\fR
.RS 4
Control access to specific device nodes by the executed processes\&. Takes two space\-separated strings: a device node path (such as
/dev/null) followed by a combination of
\fBr\fR,
\fBw\fR,
\fBm\fR
to control
\fIr\fReading,
\fIw\fRriting, or creation of the specific device node by the unit (\fIm\fRknod), respectively\&. This controls the
"devices\&.allow"
and
"devices\&.deny"
control group attributes\&. For details about these control group attributes, see
\m[blue]\fBdevices\&.txt\fR\m[]\&\s-2\u[5]\d\s+2\&.
.RE
.PP
\fIDevicePolicy=auto|closed|strict\fR
.RS 4
Control the policy for allowing device access:
.PP
\fBstrict\fR
.RS 4
means to only allow types of access that are explicitly specified\&.
.RE
.PP
\fBclosed\fR
.RS 4
in addition, allows access to standard pseudo devices including
/dev/null,
/dev/zero,
/dev/full,
/dev/random, and
/dev/urandom\&.
.RE
.PP
\fBauto\fR
.RS 4
in addition, allows access to all devices if no explicit
\fIDeviceAllow=\fR
is present\&. This is the default\&.
.RE
.RE
.PP
\fISlice=\fR
.RS 4
The name of the slice unit to place the unit in\&. Defaults to
system\&.slice
for all non\-instantiated units of all unit types (except for slice units themselves see below)\&. Instance units are by default placed in a subslice of
system\&.slice
that is named after the template name\&.
.sp
This option may be used to arrange systemd units in a hierarchy of slices each of which might have resource settings applied\&.
.sp
For units of type slice, the only accepted value for this setting is the parent slice\&. Since the name of a slice unit implies the parent slice, it is hence redundant to ever set this parameter directly for slice units\&.
.RE
.SH "SEE ALSO"
.PP
\fBsystemd\fR(1),
\fBsystemd.unit\fR(5),
\fBsystemd.service\fR(5),
\fBsystemd.slice\fR(5),
\fBsystemd.scope\fR(5),
\fBsystemd.socket\fR(5),
\fBsystemd.mount\fR(5),
\fBsystemd.swap\fR(5),
\fBsystemd.directives\fR(7),
\fBsystemd.special\fR(7), The documentation for control groups and specific controllers in the Linux kernel:
\m[blue]\fBcgroups\&.txt\fR\m[]\&\s-2\u[6]\d\s+2,
\m[blue]\fBcpuacct\&.txt\fR\m[]\&\s-2\u[7]\d\s+2,
\m[blue]\fBmemory\&.txt\fR\m[]\&\s-2\u[3]\d\s+2,
\m[blue]\fBblkio\-controller\&.txt\fR\m[]\&\s-2\u[4]\d\s+2\&.
.SH "NOTES"
.IP " 1." 4
New Control Group Interfaces
.RS 4
\%http://www.freedesktop.org/wiki/Software/systemd/ControlGroupInterface/
.RE
.IP " 2." 4
sched-design-CFS.txt
.RS 4
\%https://www.kernel.org/doc/Documentation/scheduler/sched-design-CFS.txt
.RE
.IP " 3." 4
memory.txt
.RS 4
\%https://www.kernel.org/doc/Documentation/cgroups/memory.txt
.RE
.IP " 4." 4
blkio-controller.txt
.RS 4
\%https://www.kernel.org/doc/Documentation/cgroups/blkio-controller.txt
.RE
.IP " 5." 4
devices.txt
.RS 4
\%https://www.kernel.org/doc/Documentation/cgroups/devices.txt
.RE
.IP " 6." 4
cgroups.txt
.RS 4
\%https://www.kernel.org/doc/Documentation/cgroups/cgroups.txt
.RE
.IP " 7." 4
cpuacct.txt
.RS 4
\%https://www.kernel.org/doc/Documentation/cgroups/cpuacct.txt
.RE
