'\" t
.TH "SYSTEMD\-RUN" "1" "" "systemd 208" "systemd-run"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
systemd-run \- Run programs in transient scope or service units
.SH "SYNOPSIS"
.HP \w'\fBsystemd\-run\fR\ 'u
\fBsystemd\-run\fR [OPTIONS...] \fICOMMAND\fR\ [ARGS...] 
.SH "DESCRIPTION"
.PP
\fBsystemd\-run\fR
may be used create and start a transient
\&.service
or a
\&.scope
unit and run the specified
\fICOMMAND\fR
in it\&.
.PP
If a command is run as transient service unit, it will be started and managed by the service manager like any other service, and thus show up in the output of
\fBsystemctl list\-units\fR
like any other unit\&. It will run in a clean and detached execution environment\&.
\fBsystemd\-run\fR
will start the service asynchronously in the background and immediately return\&.
.PP
If a command is run as transient scope unit, it will be started directly by
\fBsystemd\-run\fR
and thus inherit the execution environment of the caller\&. It is however managed by the service manager similar to normal services, and will also show up in the output of
\fBsystemctl list\-units\fR\&. Execution in this case is synchronous, and execution will return only when the command finishes\&.
.SH "OPTIONS"
.PP
The following options are understood:
.PP
\fB\-h\fR, \fB\-\-help\fR
.RS 4
Prints a short help text and exits\&.
.RE
.PP
\fB\-\-version\fR
.RS 4
Prints a short version string and exits\&.
.RE
.PP
\fB\-\-user\fR
.RS 4
Talk to the service manager of the calling user, rather than the service manager of the system\&.
.RE
.PP
\fB\-\-scope\fR
.RS 4
Create a transient
\&.scope
unit instead of the default transient
\&.service
unit\&.
.RE
.PP
\fB\-\-unit=\fR
.RS 4
Use this unit name instead of an automatically generated one\&.
.RE
.PP
\fB\-\-description=\fR
.RS 4
Provide description for the unit\&. If not specified, the command itself will be used as a description\&. See
\fIDescription=\fR
in
\fBsystemd.unit\fR(5)\&.
.RE
.PP
\fB\-\-slice=\fR
.RS 4
Make the new
\&.service
or
\&.scope
unit part of the specified slice, instead of the
system\&.slice\&.
.RE
.PP
\fB\-\-remain\-after\-exit\fR
.RS 4
After the service\*(Aqs process has terminated, keep the service around until it is explicitly stopped\&. This is useful to collect runtime information about the service after it finished running\&. Also see
\fIRemainAfterExit=\fR
in
\fBsystemd.service\fR(5)\&.
.RE
.PP
\fB\-\-send\-sighup\fR
.RS 4
When terminating the scope unit, send a SIGHUP immediately after SIGTERM\&. This is useful to indicate to shells and shell\-like processes that the connection has been severed\&. Also see
\fISendSIGHUP=\fR
in
\fBsystemd.kill\fR(5)\&.
.RE
.PP
All command\-line arguments after the first non\-option argument become part of the commandline of the launched process\&. If a command is run as service unit, its first argument needs to be an absolute binary path\&.
.SH "EXIT STATUS"
.PP
On success, 0 is returned, a non\-zero failure code otherwise\&.
.SH "EXAMPLE"
.PP
The following command will log the environment variables provided by systemd to services:
.sp
.if n \{\
.RS 4
.\}
.nf
# systemd\-run env
Running as unit run\-19945\&.service\&.
# journalctl \-u run\-19945\&.service
Sep 08 07:37:21 bupkis systemd[1]: Starting /usr/bin/env\&.\&.\&.
Sep 08 07:37:21 bupkis systemd[1]: Started /usr/bin/env\&.
Sep 08 07:37:21 bupkis env[19948]: PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin
Sep 08 07:37:21 bupkis env[19948]: LANG=en_US\&.UTF\-8
Sep 08 07:37:21 bupkis env[19948]: BOOT_IMAGE=/vmlinuz\-3\&.11\&.0\-0\&.rc5\&.git6\&.2\&.fc20\&.x86_64
    
.fi
.if n \{\
.RE
.\}
.SH "SEE ALSO"
.PP
\fBsystemd\fR(1),
\fBsystemctl\fR(1),
\fBsystemd.unit\fR(5),
\fBsystemd.service\fR(5),
\fBsystemd.scope\fR(5),
\fBsystemd.slice\fR(5)\&.
